// Generated by view binder compiler. Do not edit!
package com.example.specialisedfitness_1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.specialisedfitness_1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPelvicTiltBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText countThresholdInput;

  @NonNull
  public final TextView countThresholdLabel;

  @NonNull
  public final TextView overallCountTextView;

  @NonNull
  public final Button setThresholdsButton;

  @NonNull
  public final TextView statusTextView;

  @NonNull
  public final EditText timeThresholdInput;

  @NonNull
  public final TextView timeThresholdLabel;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView trackerTextView;

  private ActivityPelvicTiltBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText countThresholdInput, @NonNull TextView countThresholdLabel,
      @NonNull TextView overallCountTextView, @NonNull Button setThresholdsButton,
      @NonNull TextView statusTextView, @NonNull EditText timeThresholdInput,
      @NonNull TextView timeThresholdLabel, @NonNull Toolbar toolbar,
      @NonNull TextView trackerTextView) {
    this.rootView = rootView;
    this.countThresholdInput = countThresholdInput;
    this.countThresholdLabel = countThresholdLabel;
    this.overallCountTextView = overallCountTextView;
    this.setThresholdsButton = setThresholdsButton;
    this.statusTextView = statusTextView;
    this.timeThresholdInput = timeThresholdInput;
    this.timeThresholdLabel = timeThresholdLabel;
    this.toolbar = toolbar;
    this.trackerTextView = trackerTextView;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPelvicTiltBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPelvicTiltBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_pelvic_tilt, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPelvicTiltBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.countThresholdInput;
      EditText countThresholdInput = ViewBindings.findChildViewById(rootView, id);
      if (countThresholdInput == null) {
        break missingId;
      }

      id = R.id.countThresholdLabel;
      TextView countThresholdLabel = ViewBindings.findChildViewById(rootView, id);
      if (countThresholdLabel == null) {
        break missingId;
      }

      id = R.id.overallCountTextView;
      TextView overallCountTextView = ViewBindings.findChildViewById(rootView, id);
      if (overallCountTextView == null) {
        break missingId;
      }

      id = R.id.setThresholdsButton;
      Button setThresholdsButton = ViewBindings.findChildViewById(rootView, id);
      if (setThresholdsButton == null) {
        break missingId;
      }

      id = R.id.statusTextView;
      TextView statusTextView = ViewBindings.findChildViewById(rootView, id);
      if (statusTextView == null) {
        break missingId;
      }

      id = R.id.timeThresholdInput;
      EditText timeThresholdInput = ViewBindings.findChildViewById(rootView, id);
      if (timeThresholdInput == null) {
        break missingId;
      }

      id = R.id.timeThresholdLabel;
      TextView timeThresholdLabel = ViewBindings.findChildViewById(rootView, id);
      if (timeThresholdLabel == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.trackerTextView;
      TextView trackerTextView = ViewBindings.findChildViewById(rootView, id);
      if (trackerTextView == null) {
        break missingId;
      }

      return new ActivityPelvicTiltBinding((ConstraintLayout) rootView, countThresholdInput,
          countThresholdLabel, overallCountTextView, setThresholdsButton, statusTextView,
          timeThresholdInput, timeThresholdLabel, toolbar, trackerTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
